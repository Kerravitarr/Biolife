/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package GUI;

import Calculations.Configurations;
import Calculations.Gravitation;
import MapObjects.CellObject;
import java.util.HashMap;
import javax.swing.JPopupMenu;

/**
 *
 * @author Kerravitarr
 */
public class Settings extends javax.swing.JPanel {

	/** Creates new form Settings */
	public Settings() {
		initComponents();
		final var dc = Configurations.getDefaultConfiguration(Configurations.confoguration.world_type);
		configuations.add(MAP_CELLS_w = new SettingsNumber("configuations.width", 100, dc.MAP_CELLS.width, 1_000_000, Configurations.getWidth(), e -> {
			Configurations.world.awaitStop();
			final var mapG = new HashMap<CellObject.LV_STATUS, Gravitation>();
			for(var type : CellObject.LV_STATUS.values){
				mapG.put(type, Configurations.gravitation[type.ordinal()]);
			}
			//Configurations.buildMap(Configurations.confoguration.world_type, e, Configurations.getWidth(), mapG);
		}));
		/*configuations.add(MAP_CELLS_w = new SettingsNumber("configuations.width", 100, dw.width, 1_000_000, Configurations.MAP_CELLS.width, e -> {}));
		MAP_CELLS_w.setEnabled(false);
		configuations.add(MAP_CELLS_h = new SettingsNumber("configuations.height", 100, dw.height, 1_000_000, Configurations.MAP_CELLS.height, e -> {}));
		MAP_CELLS_h.setEnabled(false);
		configuations.add(WORLD_TYPE = new SettingsSelect<>("configuations.WORLD_TYPE", Configurations.WORLD_TYPE.values, Configurations.WORLD_TYPE.LINE_H, Configurations.world_type, e -> {}));
		WORLD_TYPE.setEnabled(false);
		configuations.add(new JPopupMenu.Separator());
		configuations.add(new SettingsNumber("configuations.savePeriod", 1_000, (int)Configurations.SAVE_PERIOD, 10_000_000, (int)Configurations.SAVE_PERIOD, e -> Configurations.SAVE_PERIOD = e));
		configuations.add(new SettingsNumber("configuations.countSave", 1, (int)Configurations.COUNT_SAVE, 10, (int)Configurations.COUNT_SAVE, e -> Configurations.COUNT_SAVE = e));
		configuations.add(new JPopupMenu.Separator());
		configuations.add(new SettingsSlider("configuations.mutagenicity",
				0, Configurations.DAGGRESSIVE_ENVIRONMENT, 100,
				0, Configurations.AGGRESSIVE_ENVIRONMENT, 100, e -> Configurations.AGGRESSIVE_ENVIRONMENT = e));
		configuations.add( new SettingsSlider("configuations.timeLifeOrg", 1, Configurations.DTIK_TO_EXIT, 100, 1, Configurations.TIK_TO_EXIT,null, e -> {
			Configurations.TIK_TO_EXIT = e;
		}));
		configuations.add(new SettingsSlider("configuations.dirtiness",
				0, (int)(Configurations.DDIRTY_WATER * 100), 1000,
				0, (int)(Configurations.DIRTY_WATER * 100), null, e -> Configurations.DIRTY_WATER = e / 100d));
		
		for (int i = 0; i < CellObject.LV_STATUS.length; i++) {
			final var status = CellObject.LV_STATUS.values[i];
			if(status == CellObject.LV_STATUS.GHOST) continue;
			final var g = Configurations.gravitation[i];
			gravitations.add( new SettingsSlider("gravitation." + status.name(), 0, g.getValue(), 1000, 0, g.getValue(),null,
					e -> {		
			}));
			//if(g.getValue() != 0)
			//	gravitations.add(new SettingsSelect<>("gravitation.TYPE", Configurations.WORLD_TYPE.values, Configurations.WORLD_TYPE.LINE_H, Configurations.world_type, e -> {}));
		}*/
		
	}

	/** This method is called from within the constructor to
	 * initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        configuations = new javax.swing.JPanel();
        gravitations = new javax.swing.JPanel();
        suns = new javax.swing.JPanel();
        minerals = new javax.swing.JPanel();
        streams = new javax.swing.JPanel();

        setLayout(new javax.swing.BoxLayout(this, javax.swing.BoxLayout.Y_AXIS));

        configuations.setBorder(javax.swing.BorderFactory.createTitledBorder(null, Configurations.getProperty(Settings.class,"configurations"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        configuations.setLayout(new javax.swing.BoxLayout(configuations, javax.swing.BoxLayout.Y_AXIS));
        add(configuations);

        gravitations.setBorder(javax.swing.BorderFactory.createTitledBorder(null, Configurations.getProperty(Settings.class,"gravitations"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        gravitations.setLayout(new javax.swing.BoxLayout(gravitations, javax.swing.BoxLayout.Y_AXIS));
        add(gravitations);

        suns.setBorder(javax.swing.BorderFactory.createTitledBorder(null, Configurations.getProperty(Settings.class,"suns"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        suns.setLayout(new javax.swing.BoxLayout(suns, javax.swing.BoxLayout.LINE_AXIS));
        add(suns);

        minerals.setBorder(javax.swing.BorderFactory.createTitledBorder(null, Configurations.getProperty(Settings.class,"minerals"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        minerals.setLayout(new javax.swing.BoxLayout(minerals, javax.swing.BoxLayout.LINE_AXIS));
        add(minerals);

        streams.setBorder(javax.swing.BorderFactory.createTitledBorder(null, Configurations.getProperty(Settings.class,"streams"), javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION));
        streams.setLayout(new javax.swing.BoxLayout(streams, javax.swing.BoxLayout.LINE_AXIS));
        add(streams);
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel configuations;
    private javax.swing.JPanel gravitations;
    private javax.swing.JPanel minerals;
    private javax.swing.JPanel streams;
    private javax.swing.JPanel suns;
    // End of variables declaration//GEN-END:variables
	/**Слайдер ширины игрового поля*/
	private SettingsNumber MAP_CELLS_w;
	/**Слайдер высоты игрового поля*/
	private SettingsNumber MAP_CELLS_h;
	/**Слайдер типа мира*/
	private SettingsSelect<Configurations.WORLD_TYPE> WORLD_TYPE;
}
